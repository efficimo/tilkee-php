swagger: "2.0"
info:
  description: "The Tilkee APIs allow you to integrate complex services with Tilkee to go
                beyond the integrations we provide out of the box."
  version: "1.0.0"
  title: "Tilkee"
  termsOfService: "https://www.tilkee.fr/mentions-legales/"
  contact:
    email: "rdavaillaud@hbs-research.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "api-staging.tilkee.com"
schemes:
- "https"
tags:
  - name: Project
    description: Access to Petstore orders
    externalDocs:
      description: Documentation
      url: 'https://tilkee.readme.io/docs/what-is-it-1'
  - name: Tilk
    description: >-
      A Tilk is a link generated for your lead or contact in a project. The link is tracked
      and gives you back statistics about your lead's behavior.
    externalDocs:
      description: Documentation
      url: 'https://tilkee.readme.io/docs/what-is-it-2'
  - name: Item
    description: >-
      Items are the different docs you add to a project. An item can be a picture, a video, a text, a doc, an external website.
    externalDocs:
      description: Documentation
      url: 'https://tilkee.readme.io/docs/what-is-it-3'
paths:
  /projects:
    parameters:
      - $ref: '#/parameters/tilkeeAuthParam'
    post:
      tags:
        - Project
      summary: Create
      description: >-
        Creating a project in this way you need to add everything; name, items,
        properties, etc.
        This section is used for creating projects with documents directly added
        in. To use this section you need to have a project already created or a
        template, and your documents have to be on the S3.
      operationId: addProject
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Project'
        400:
          description: Bad Request
        401:
          description: Unauthorized
      parameters:
        - in: body
          name: project
          description: The project
          schema:
            $ref: '#/definitions/InputProject'
    get:
      tags:
        - Project
      summary: List
      description: Used to get a list of all your projects
      operationId: listProject
      parameters:
        - name: search
          in: query
          description: Name
          type: string
        - name: limit
          in: query
          type: integer
          format: int32
        - name: offset
          in: query
          type: integer
          format: int32
        - name: status
          in: query
          type: string
        - name: user_id
          in: query
          description: >-
            To see projects to specific user. Management need to be active in
            company.
          type: integer
          format: int32
        - name: is_template
          in: query
          type: boolean
        - name: name
          in: query
          type: string
        - name: won
          in: query
          type: boolean
        - name: can_be_downloaded
          in: query
          type: boolean
        - name: is_or_was_signed
          in: query
          type: boolean
        - name: signed
          in: query
          type: boolean
        - name: starred
          in: query
          type: boolean
        - name: nb_connections
          in: query
          type: integer
          format: int32
        - name: leader_id
          in: query
          type: integer
          format: int32
        - name: external_id
          in: query
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResponseProjectList'
        400:
          description: Bad Request
        401:
          description: Unauthorized
  '/projects/{projectId}':
    parameters:
      - $ref: '#/parameters/tilkeeAuthParam'
    get:
      tags:
        - Project
      summary: Get (details of a project)
      description: Used to get all details of a specific project
      operationId: getProject
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Project'
        400:
          description: Bad Request
        401:
          description: Unauthorized
    put:
      tags:
        - Project
      summary: Update
      description: >-
        This method can change a Tilkee project, in the following cases:
        - Say that a project is won
        - Archive a project
        - Change its name
        - Modify options like downloadable
      operationId: putProject
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          type: integer
          format: int64
        - in: body
          name: project
          required: true
          description: The project
          schema:
            $ref: '#/definitions/InputProject'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Project'
        400:
          description: Bad Request
        401:
          description: Unauthorized
    delete:
      tags:
        - Project
      summary: Delete
      description: Permanently deletes a specific project
      operationId: deleteProject
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        401:
          description: Unauthorized
  '/projects/{projectId}/duplicate':
    parameters:
      - $ref: '#/parameters/tilkeeAuthParam'
    post:
      tags:
        - Project
      summary: Duplicate
      description: In this section you can create a project using an existing one (copying it). Every part of the new project will be the same except the tilks.
      operationId: duplicateProject
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          type: integer
          format: int64
        - in: body
          name: project
          required: true
          description: The project
          schema:
            type: object
            properties:
              name:
                type: string
                example: Name of the project (any alphanumeric info)
              can_be_downladed:
                type: boolean
                description: >-
                  To choose if visitor can download all of the project (only
                  if company have right « download_option »)
              archived_at:
                type: string
                format: date
                example: '2017-12-29'
                description: >-
                  Date to choose when a project is archived (only if company
                  has right « end_date_option »)
              should_duplicate_assignments:
                type: boolean
                description: >-
                  To choose if project assignments should be kept
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseProjectDuplicate'
        400:
          description: Bad Request
        401:
          description: Unauthorized
  '/projects/{projectId}/items':
    parameters:
      - $ref: '#/parameters/tilkeeAuthParam'
    get:
      tags:
        - Project
      summary: List of items in a project
      description: Use that section to consult all items in a project
      operationId: listProjectItem
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          type: integer
          format: int64
        - name: status
          in: query
          type: string
          enum:
            - activated
            - archived
        - name: is_template
          in: query
          type: boolean
        - name: owner_id
          in: query
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ProjectItem'
        400:
          description: Bad Request
        401:
          description: Unauthorized
  '/projects/{projectId}/add_items':
    parameters:
      - $ref: '#/parameters/tilkeeAuthParam'
    post:
      tags:
        - Project
      summary: Add item in project
      description: Use this section to add an existing item to a project
      operationId: addItemToProject
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          type: integer
          format: int64
        - name: item
          in: body
          required: true
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - title
                    - signable
                  properties:
                    id:
                      type: integer
                      format: int64
                    title:
                      type: string
                    signable:
                      type: boolean
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ProjectItem'
        400:
          description: Bad Request
        401:
          description: Unauthorized
  '/projects/{projectId}/remove_items':
    parameters:
      - $ref: '#/parameters/tilkeeAuthParam'
    post:
      tags:
        - Project
      summary: Remove items
      description: Use this command to remove items from a project by ids
      operationId: removeProjectItems
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          type: integer
          format: int64
        - name: items
          in: body
          required: true
          schema:
            type: object
            properties:
              project_items_ids:
                type: array
                items:
                  type: integer
                  format: int64
      responses:
        '200':
          description: The response is the list of items in your project
          schema:
            type: array
            items:
              $ref: '#/definitions/ProjectItem'
        400:
          description: Bad Request
        401:
          description: Unauthorized
  '/projects/{projectId}/archive':
    parameters:
      - $ref: '#/parameters/tilkeeAuthParam'
    post:
      tags:
        - Project
      summary: Archive
      description: Usse this method to archive a project, you can use the won parameter to archive won, lost or undefined
      operationId: archiveProject
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          type: integer
          format: int64
        - name: won
          in: body
          schema:
            type: object
            properties:
              won:
                type: string
                enum: [won, lost, ac]
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseProjectArchive'
        400:
          description: Bad Request
        401:
          description: Unauthorized
  '/projects/{projectId}/restore':
    parameters:
      - $ref: '#/parameters/tilkeeAuthParam'
    post:
      tags:
        - Project
      summary: Restore
      description: Use this command to restore an archived project. Id is needed
      operationId: restoreProject
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseProjectArchive'
        400:
          description: Bad Request
        401:
          description: Unauthorized

  '/projects/{projectId}/tokens':
    parameters:
      - $ref: '#/parameters/tilkeeAuthParam'
    post:
      tags:
        - Tilk
      summary: Create
      description: >-
        This method creates a "Tilk", which is a unique link to send your project to your prospect.
        You can create up to 200 "Tilks" with one call to this method.
      operationId: createTilk
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          type: integer
          format: int64
        - name: tilks
          in: body
          schema:
            $ref: '#/definitions/InputToken'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseCreateToken'
        400:
          description: Bad Request
        401:
          description: Unauthorized
    get:
      tags:
        - Tilk
      summary: List of Tilks in a project
      description: >-
        You can have several links (Tilks) for a project. This command is used to retrieve all of them.
        A project id is needed
      operationId: listProjectTilks
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          type: integer
          format: int64
        - name: search
          in: query
          description: Title, name, email, token_url
          type: string
        - name: limit
          in: query
          type: integer
          format: int64
        - name: offset
          in: query
          type: integer
          format: int64
        - name: order
          in: query
          type: string
        - name: archived_tokens
          in: query
          type: boolean
        - name: signed_status
          in: query
          type: string
          enum: [init, waiting, signed, signed_complete]
        - name: consulted
          in: query
          type: boolean
        - name: signed
          in: query
          type: boolean
        - name: nb_connections
          in: query
          type: integer
          format: int64
        - name: interest
          in: query
          type: integer
          format: int64
        - name: external_id
          in: query
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseTokenList'
        400:
          description: Bad Request
        401:
          description: Unauthorized

  '/tokens':
    parameters:
      - $ref: '#/parameters/tilkeeAuthParam'
    get:
      tags:
        - Tilk
      summary: List of Tilks
      description: >-
        This command is used to retrieve all of your tilks, this way you can filter them (by interest for instance).
      operationId: listTilks
      parameters:
        - name: limit
          in: query
          type: integer
          format: int64
        - name: offset
          in: query
          type: integer
          format: int64
        - name: order
          in: query
          type: string
        - name: is_owner
          in: query
          type: boolean
        - name: archived_tokens
          in: query
          type: boolean
        - name: accessible_tokens
          in: query
          description: Not archived tokens in not archived projects
          type: boolean
        - name: consulted
          in: query
          type: boolean
        - name: project_id
          in: query
          type: integer
          format: int64
        - name: nb_connections
          in: query
          type: integer
          format: int64
        - name: interest
          in: query
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseTokenList'
        400:
          description: Bad Request
        401:
          description: Unauthorized

  '/projects/{projectId}/tokens/{id}':
    parameters:
      - $ref: '#/parameters/tilkeeAuthParam'
    get:
      tags:
        - Tilk
      summary: Get (details of a Tilk)
      description: >-
        Used to get every details of a link (Tilk). You need a project id and a Tilk id.
      operationId: getProjectTilk
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: ID of tilk
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Token'
        400:
          description: Bad Request
        401:
          description: Unauthorized
    put:
      tags:
        - Tilk
      summary: Update
      description: >-
        Used to update Tilk parameters like name or status
      operationId: updateProjectTilk
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: ID of tilk
          required: true
          type: integer
          format: int64
        - name: tilk
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: Update your project name
              won:
                type: boolean
                description: Specify if the tilk succeeded
              extenal_id:
                type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Token'
        400:
          description: Bad Request
        401:
          description: Unauthorized
  '/projects/{projectId}/tokens/{id}/archive/':
    parameters:
      - $ref: '#/parameters/tilkeeAuthParam'
    post:
      tags:
        - Tilk
      summary: Archive
      description: >-
        In this section you can archive your tilks
      operationId: archiveProjectTilk
      parameters:
        - name: projectId
          in: path
          description: ID of project
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: ID of tilk
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Token'
        400:
          description: Bad Request
        401:
          description: Unauthorized
  '/tokens/{id}/restore':
    parameters:
      - $ref: '#/parameters/tilkeeAuthParam'
    put:
      tags:
        - Tilk
      summary: Restore
      description: >-
        Used to restore an archived Tilk, you need a Tilk id
      operationId: restoreTilk
      parameters:
        - name: id
          in: path
          description: ID of tilk
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Token'
        400:
          description: Bad Request
        401:
          description: Unauthorized

  '/items/':
    parameters:
      - $ref: '#/parameters/tilkeeAuthParam'
    post:
      tags:
        - Item
      summary: Create Items
      description: >-
        This section allows you to create items. You have 3 possibilities:
        add a document from a URL, add text or add external content.'
      operationId: createItems
      parameters:
        - in: body
          name: items
          required: true
          description: The items
          schema:
            type: array
            items:
              $ref: '#/definitions/InputItem'

      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ItemWithOwnership'
        400:
          description: Bad Request
        401:
          description: Unauthorized
    get:
      tags:
        - Item
      summary: List of Items
      description: Use this to get the list of items you added to your Tilkee account
      operationId: listItems
      parameters:
        - name: search
          in: query
          description: Title, owner name
          type: string
        - name: limit
          in: query
          type: integer
          format: int32
        - name: offset
          in: query
          type: integer
          format: int32
        - name: order
          in: query
          description: '-items.created_at'
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseItemList'
        400:
          description: Bad Request
        401:
          description: Unauthorized
  '/items/{itemId}':
    parameters:
      - $ref: '#/parameters/tilkeeAuthParam'
    delete:
      tags:
        - Item
      summary: Delete
      description: Permanently deletes a specific item
      operationId: deleteItem
      parameters:
        - name: itemId
          in: path
          description: ID of item
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        400:
          description: Bad Request
        401:
          description: Unauthorized
  '/direct_upload_data/':
    parameters:
      - $ref: '#/parameters/tilkeeAuthParam'
    get:
      tags:
        - Item
      summary: Get upload file information
      description: Use this to get the s3 informations to be used to upload on S3
      operationId: getUploadFileInformation
      parameters:
        - name: filename
          in: query
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UploadInformation'
        400:
          description: Bad Request
        401:
          description: Unauthorized

parameters:
  tilkeeAuthParam:
    in: header
    name: x-tilk-ref
    type: string
    required: true
    description: Identification de l'outil, peux contenir un numéro de version par ex. tool-2.1

definitions:
  Project:
    allOf:
      - $ref: '#/definitions/ProjectCommon'
      - $ref: '#/definitions/ProjectDetail'

  ProjectCommon:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
        format: int64
        example: 37980
      name:
        type: string
        example: My first project
      created_at:
        type: string
        format: date-time
        example: '2015-11-19T10:02:05.322+01:00'
      updated_at:
        type: string
        format: date-time
        example: '2015-11-19T10:02:05.322+01:00'
      archived_at:
        type: string
        format: date
        example: '2017-12-29'
        description: >-
          Date to choose when a project is archived (only if company has right
          « end_date_option »)
      status:
        type: string
        enum: [activated, archived]
      won:
        type: string
        enum: [won, lost, ac, na]
        example: na
      is_template:
        type: boolean
        example: false
      can_be_downladed:
        type: boolean
        example: true
        description: >-
          To choose if visitor can download all of the project (only if
          company have right « download_option »)
      preview:
        type: string
        example: >-
          https://api.tilkee.com/projects/37980/preview?signature=Vgr7G1fDo0WaquJOAL69rQuFSO6Aw6QmyxLOmqfvenY%3D%0A
      preview_new:
        type: string
        example: >-
          https://api.tilkee.com/projects/37980/preview?signature=Vgr7G1fDo0WaquJOAL69rQuFSO6Aw6QmyxLOmqfvenY%3D%0A
      duration:
        type: integer
        format: int32
        example: 30
        description: >-
          Used only for templates, you can create projects from this template
          that will expire  days later.
      is_or_was_signable:
        type: boolean
        example: false
      last_sign_in_at:
        type: [ string, null]
        format: date-time
        example: null
      signed:
        type: boolean
        example: false
      starred:
        type: boolean
        example: false
      external_id:
        type: string
        example: 'PIPEDRIVE_DEAL:21654'
        description: ID of the project in your system
      token_url:
        type: string
      url:
        type: string
      collaborators_count:
        type: integer
        format: int32
      first_access_at:
        type: string
        format: date
      consultable:
        type: boolean
        exemple: false
      iframes:
        type: object
  ProjectDetail:
    type: object
    properties:
      nb_connections:
        type: integer
        format: int32
      total_time:
        type: integer
        format: int64
      leader:
        $ref: '#/definitions/Leader'
      collaborators:
        type: array
        items:
          $ref: '#/definitions/Collaborator'
      theme:
        $ref: '#/definitions/Theme'
  ProjectListDetail:
    type: object
    properties:
      nb_connections:
        type: integer
        format: int32
      total_time:
        type: integer
        format: int64
      leader_first_name:
        type: string
      leader_last_name:
        type: string
      leader_id:
        type: integer
        format: int64
        example: 4658
      leader_avatar:
        type: string
      tokens_count:
        type: integer
        format: int32
      project_items_count:
        type: integer
        format: int32

  ResponseProjectList:
    type: object
    properties:
      search:
        type: string
        description: Name
      limit:
        type: integer
        format: int32
        example: 50
      offset:
        type: integer
        format: int32
        example: 0
      total:
        type: integer
        format: int32
        example: 2
      order:
        type: string
        example: '-projects.created_at'
      contents:
        type: array
        items:
          allOf:
            - $ref: '#/definitions/ProjectCommon'
            - $ref: '#/definitions/ProjectListDetail'
  ResponseProjectDuplicate:
    allOf:
      - $ref: '#/definitions/ProjectCommon'
      - type: object
        properties:
          theme:
            $ref: '#/definitions/Theme'
      - type: object
        properties:
          tokens:
            type: array
            items:
              $ref: '#/definitions/Token'
  ResponseProjectArchive:
    allOf:
      - $ref: '#/definitions/ProjectCommon'
      - type: object
        properties:
          theme:
            $ref: '#/definitions/Theme'


  InputProject:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: My first project
      archived_at:
        type: string
        format: date
        example: '2017-12-29'
        description: >-
          Date to choose when a project is archived (only if company
          has right « end_date_option »)
      can_be_downladed:
        type: boolean
        description: >-
          To choose if visitor can download all of the project (only
          if company have right « download_option »)
      external_id:
        type: string
        example: 'PIPEDRIVE_DEAL:21654'
        description: ID of the project in your system
      duration:
        type: integer
        format: int32
        example: 30
        description: >-
          Used only for templates, you can create projects from this
          template that will expire  days later.

  ProjectItem:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 77585
      type:
        type: string
        example: ProjectItem
      element_id:
        type: integer
        format: int64
      title:
        type: string
        example: title
      signable:
        type: boolean
      item:
        $ref: '#/definitions/Item'
  Item:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 44523
      title:
        type: string
        example: filename
      usable:
        type: boolean
      element_type:
        type: string
        example: image, doc, ...
      extension:
        type: string
        example: jpg
      type:
        type: string
        example: 'Image:jpg'
      external_id:
        type: string
      s3_url:
        type: string
        example:
      content_url:
        type: string
        example: 'https://datatlk.tilkee.com/uploads/...'
      thumbnail_url:
        type: string
        example: 'https://datatlk.tilkee.com/uploads/...'
      visible:
        type: boolean
      created_at:
        type: string
        format: date-time

  ItemWithOwnership:
    allOf:
      - $ref: '#/definitions/Item'
      - type: object
        properties:
          owner:
            $ref: '#/definitions/User'
      - type: object
        properties:
          projects:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
      - type: object
        properties:
          projects_count:
            type: integer


  ResponseItemList:
    type: object
    properties:
      search:
        type: string
        description: Name
      limit:
        type: integer
        format: int32
        example: 50
      offset:
        type: integer
        format: int32
        example: 0
      total:
        type: integer
        format: int32
        example: 2
      order:
        type: string
        example: '-projects.created_at'
      contents:
        type: array
        items:
          $ref: '#/definitions/ItemWithOwnership'

  InputItem:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: My new file
      title:
        type: string
      content:
        type: string
        example: '<p>this is some html content</p>'
      url:
        type: string
      from_url:
        type: boolean
      s3_url:
        type: string
      type:
        type: string
        enum: [file, text, link]
      external_id:
        type: string

  Theme:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 4402
      name:
        type: string
        example: 'Theme #1'
      logo:
        type: string
      main_color:
        type: string
        example: '#4fada3'
      secondary_color:
        type: string
        example: '#479c93'
      text_color:
        type: string
        example: '#FFFFFF'
      default:
        type: boolean
        example: true
  Leader:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 4658
      first_name:
        type: string
      last_name:
        type: string
      full_name:
        type: string
        example: paul+test@tilkee.com
      email:
        type: string
        example: paul+test@tilkee.com
      cell_phone_number:
        type: string
      phone_number:
        type: string
      contact_email:
        type: string
        example: paul+test@tilkee.com
      should_receive_emails:
        type: boolean
        example: true
      level_id:
        type: integer
        example: 1
      devices:
        type: array
        items:
          $ref: '#/definitions/Device'
      is_owner:
        type: boolean
        example: true
      is_orange_user:
        type: boolean
        example: false
      locale:
        type: string
        example: en
      should_receive_connexion_email:
        type: boolean
        example: true
      frequency_proposal_sumup_email:
        type: integer
        format: int32
        example: 7
      position:
        type: string
      avatar:
        type: string
      linkedin_account_url:
        type: string
        default: ''
      twitter_account_url:
        type: string
        default: ''
      facebook_account_url:
        type: string
        default: ''
      last_sign_in_at:
        type: [ integer, null]
        format: int64
        example: 1447923437
        description: Timestamp

  Token:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 112985
      name:
        type: string
        example: Paul
      project_name:
        type: string
        example: My first project updated
      link:
        type: string
        example: https://api.tilk.us/v/09bf23ce92
      won:
        type: string
        enum: [won, lost, ac, na]
      created_at:
        type: string
        format: date-time
      consulted:
        type: boolean
        default: false
      signed_status:
        type: string
        example: "no_init"
      archived_at:
        type: [string, null]
        format: date-time
      signed:
        type: boolean
        default: false
      signed_docs:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
      interest:
        type: integer
        format: int32
      project_id:
        type: integer
        format: int64
      preview_url:
        type: string
      external_id:
        type: string
        example: 'my_personal_id:1234'
      generated_by_prospect:
        type: boolean
      first_access_at:
        type: [string, null]
        format: date-time
      # only in list
      total_time:
        type: integer
        format: int64
      last_sign_in_at:
        type: [ string, null]
        format: date-time
        example: null
      nb_connections:
        type: integer
        format: int32




  InputToken:
    type: object
    required:
      - persons
      - name
    properties:
      persons:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              example: Jean
            external_id:
              type: integer
              format: int64
              example: 1234
  ResponseCreateToken:
    type: object
    properties:
      contents:
        type: array
        items:
          $ref: '#/definitions/Token'

  ResponseTokenList:
    type: object
    properties:
      search:
        type: string
        description: Name
      limit:
        type: integer
        format: int32
        example: 50
      offset:
        type: integer
        format: int32
        example: 0
      total:
        type: integer
        format: int32
        example: 2
      order:
        type: string
        example: '-projects.created_at'
      contents:
        type: array
        items:
          $ref: '#/definitions/Token'

  # Definition not correct
  Device:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 4402

  Collaborator:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 4402

  User:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 4658
      first_name:
        type: string
      last_name:
        type: string
      full_name:
        type: string
      email:
        type: string
        example: paul+test@tilkee.com
      phone_number:
        type: string
      cell_phone_number:
        type: string
      contact_email:
        type: string
        example: paul+test@tilkee.com
      should_receive_emails:
        type: boolean
        example: true
      level_id:
        type: integer
        example: 1
      support_end_date:
        type: string
        format: date
      devices:
        type: array
        items:
          $ref: '#/definitions/Device'
      locale:
        type: string
        example: en, fr
      should_receive_connexion_email:
        type: boolean
        example: true
      frequency_proposal_sumup_email:
        type: integer
        format: int32
        example: 7
      position:
        type: string
      avatar:
        type: string
      linkedin_account_url:
        type: string
        default: ''
      twitter_account_url:
        type: string
        default: ''
      facebook_account_url:
        type: string
        default: ''
      is_owner:
        type: boolean
      can_see_stats:
        type: boolean
      last_sign_in_at:
        type: integer
        format: int64
        example: 1447923437
        description: Timestamp
      referral_token:
        type: string
      convert_token:
        type: string
      dj_json_id:
        type: string
      password_changed_at:
        type: string
        format: date-time
      created_at:
        type: string
        format: date-time
        example: '2015-11-19T10:02:05.322+01:00'
      updated_at:
        type: string
        format: date-time
        example: '2015-11-19T10:02:05.322+01:00'
      company_id:
        type: integer
        format: int64
      deleted_at:
        type: [ string, null]
        format: date-time
        example: '2015-11-19T10:02:05.322+01:00'
      proposal_sumup_sent_at:
        type: [ string, null]
        format: date-time
        example: '2015-11-19T10:02:05.322+01:00'
      sf_id:
        type: string
      frequency_noread_sumup_email:
        type: integer
        format: int32
      intercom_id:
        type: string
      default_theme_id:
        type: integer
        format: int64
      utm:
        type: array
        items:
          type: object
          properties:
            url_referer:
              type: string
            UTM:
              type: object
              properties:
                id:
                  type: string
      
      rights:
        type: array
        items:
          type: string
      profile:
        type: object
        properties:
          should_receive_emails:
            type: boolean
          should_receive_connexion_email:
            type: boolean
          csv_rate_limit:
            type: integer
          receive_default_notif_contact_email:
            type: boolean
          has_default_pointer:
            type: boolean
          legal_overlay_rights:
            type: boolean
          retention:
            type: boolean
          retention_delay:
            type: integer
      location:
        type: string
      company:
        $ref: '#/definitions/Company'
  Company:
    type: object
    properties:
      id: 
        type: integer
      name: 
        type: string
      users_to_charge_counter: 
        type: integer
      have_yousign:
        type: boolean
      have_management:
        type: boolean
      has_custom_branding:
        type: boolean
      company_rights:
        type: array
        items:
          type: string
      nb_employees:
        type: integer
      has_proabono:
        type: boolean
      subscription_has_payment:
        type: boolean
      subscription_segment: 
        type: string
      slimpay_validated:
        type: boolean
      subscription_trial_date: 
        type: string
        format: date-time
      default_theme_id:
        type: integer
        format: int64
      usable_domains:
        type: array
        items:
          type: array
          items:
            type: string
      geoloc_activate:
        type: boolean
      custom_branding:
        type: object
        properties:
          access_referral: 
            type: boolean
          access_web_notifications: 
            type: boolean
          access_subscription: 
            type: boolean
          excel_upload:
            type: boolean
          has_support:
            type: boolean
          product_map:
            type: boolean
          access_tab_collaborators:
            type: boolean
          collaborators_upsell:
            type: boolean
          alert_subscription:
            type: boolean
          excel_upsell:
            type: boolean
          product_title:
            type: string
          onboarding_videos_url:
            type: object
            properties:
              en:
                type: string 
              de:
                type: string 
              fr:
                type: string 
      location: 
        type: string
  UploadInformation:
    type: object
    properties:
      key:
        type: string
      acl:
        type: string
      policy:
        type: string
      signature:
        type: string
      AWSAccessKeyId:
        type: string
      success_action_status:
        type: string
      s3_endpoint:
        type: string
      name:
        type: string
security:
  - Bearer: []
externalDocs:
  description: Tilkee API doc v1.0
  url: 'https://tilkee.readme.io/v1.0/docs'
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header


